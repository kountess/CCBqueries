# This is a basic workflow to help you get started with Actions

name: Deploy to customer-success preprod

on:
  push:
    branches: 
    - 'preprod'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout ${{ github.sha }}
      id: checkout_code
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        
    - name: Create .revisions file
      id: create_revision
      
      if: success()
      run: echo ${GITHUB_SHA} > ./.revision
      
    - name: Create a new deployment
      id: create_deployment

      if: success()
      uses: maxkomarychev/oction-create-deployment@v0.7.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.sha }}
        environment: 'preprod'
        required_contexts: '<<EMPTY>>'

    - name: Sync files to S3
      id: sync_files

      if: success()
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --follow-symlinks --delete --exclude '.git/*' --exclude '.github/*' --exclude '.gitignore'
      env:
        AWS_S3_BUCKET: ${{ secrets.PREPROD_AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-2'

    - name: Trigger Jenkins Deployment
      id: trigger_jenkins
      if: success()
      run: |
        curl --fail -X POST \
          -H 'Content-Type: application/json' \
          -d '{"job_token":"${{ secrets.PREPROD_JENKINS_WEBHOOK_TOKEN}}"}' \
          ${{ secrets.PREPROD_JENKINS_PROXY }}

    - name: Mark deployment as successful
      id: mark_deployment_successful

      if: success()
      uses: maxkomarychev/oction-create-deployment-status@v0.7.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.create_deployment.outputs.id }}
        state: 'success'

    - name: Mark deployment as failed
      id: mark_deployment_failure

      if: failure()
      uses: maxkomarychev/oction-create-deployment-status@v0.7.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.create_deployment.outputs.id }}
        state: 'failure'
